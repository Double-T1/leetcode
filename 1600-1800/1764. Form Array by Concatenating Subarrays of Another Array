class Solution {
public:
    bool canChoose(vector<vector<int>>& groups, vector<int>& nums) {
        int i =0;
        for (auto& sub: groups) {
            i = contain(nums,i,sub);
            if (i == -1) return false;
        }   
        return true;
    }
private:
    int contain(vector<int>& nums, int k, vector<int>& sub) {
        if (k == nums.size()) return -1;
        
        vector<int> dp(sub.size(),0);
        for (int i=0, j=1; j<sub.size();) {
            if (sub[i] == sub[j]) dp[j++] = ++i;
            else if (i>0) i = dp[i-1];
            else j++;
        }
        
        int j = 0;
        while (k<nums.size() && j<sub.size()) {
            if (nums[k] == sub[j]) k++,j++;
            else if (j>0) j = dp[j-1];
            else k++;
        }
        
        if (j == sub.size()) return k;
        return -1;
    }
};
