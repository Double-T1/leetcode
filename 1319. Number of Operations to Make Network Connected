var makeConnected = function(n, connections) {
    if (connections.length+1<n) return -1

    //how many components are there?
    //union find
    let parent = []
    
    for (let [v1,v2] of connections) {
        union(parent,v1,v2)
    }

    let count = 0
    for (let i=0; i<n; i++) {
        if (find(parent,i) === i) count++
    }
    return count
};

let union = (parent,v1,v2) => {
    let p1 = find(parent,v1)
    let p2 = find(parent,v2)
    if (p1 === p2) return
    parent[p2] = p1
    return
}

let find = (parent,x) => {
    if (parent[x] === undefined) parent[x] = x
    if (x !== parent[x]) {
        parent[x] = find(parent,parent[x])
    }
    return parent[x]
}
