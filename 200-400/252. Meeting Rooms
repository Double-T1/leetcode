/**
 * Definition of Interval:
 * classs Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this->start = start;
 *         this->end = end;
 *     }
 * }
 */

bool comp(Interval& p, Interval& q) {
    return p.start<q.start;
}

class Solution {
public:
    bool canAttendMeetings(vector<Interval> &intervals) {
        sort(intervals.begin(),intervals.end(),comp);
        int prev = INT_MIN;
        for (auto& time : intervals) {
            if (prev>time.start) return false;
            prev = time.end;
        }
        return true;
    }
};
