//bfs
var connect = function(root) {
    if (root === null) return null
    let queue = [root]
    while (queue.length) {
        let size = queue.length
        let prev;
        while (size) {
            let node = queue.pop()
            if (prev !== undefined) prev.next = node 
            prev = node
            
            if (node.left) queue.unshift(node.left)
            if (node.right) queue.unshift(node.right)
            size--
        }
    }
    return root
};


//dfs
var connect = function(root) {
  if (!root) return null
  if (!root.left && !root.right) return root
      
  root.left.next = root.right

  function crossGap(lNode,rNode) {
    if (!lNode || !rNode) return null

    lNode.next = rNode

    crossGap(lNode.right,rNode.left)
    return
  }
  
  if (root.left.right) crossGap(root.left.right, root.right.left);
  connect(root.left);
  connect(root.right);
  return root
};
