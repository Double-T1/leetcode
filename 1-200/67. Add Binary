//C++
class Solution
{
public:
    string addBinary(string a, string b)
    {
        string s = "";
        
        int c = 0, i = a.size() - 1, j = b.size() - 1;
        while(i >= 0 || j >= 0 || c)
        {
            c += i >= 0 ? a[i --] - '0' : 0;
            c += j >= 0 ? b[j --] - '0' : 0;
            s = char(c % 2 + '0') + s;
            c /= 2;
        }
        
        return s;
    }
};


//JS
var addBinary = function(a, b) {
    let res = 0
    let aPointer = a.length-1
    let bPointer = b.length-1
    let carry = 0
    let str = '';

    while (aPointer >=0 && bPointer >=0) {
        res = parseInt(a[aPointer]) + parseInt(b[bPointer]) + carry
        if (res>=2) {
            res = res-2
            carry = 1
        } else {
            carry = 0
        }
        str = res.toString(10).concat(str)
        aPointer--
        bPointer--
    }


    while (aPointer>=0) {
        res = parseInt(a[aPointer]) + carry
        if (res>=2) {
            res = res-2
            carry = 1
        } else {
            carry = 0
        }
        str = res.toString(10).concat(str)
        aPointer--
    }

    while (bPointer>=0) {
        res = parseInt(b[bPointer]) + carry
        if (res>=2) {
            res = res-2
            carry = 1
        } else {
            carry = 0
        }
        str = res.toString(10).concat(str)
        bPointer--
    }

    if (carry > 0) {
        str = carry.toString(10).concat(str)
    }

    return str
};
