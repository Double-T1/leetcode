var merge = function(intervals) {
    intervals.sort((a,b)=>a[0]-b[0])
    
    let ans =[intervals[0]]
    let ansIndex =0
    let [prevLo,prevHi] = ans[0]
    for (let i=1;i<intervals.length;i++) {
        let [currentLo,currentHi] = intervals[i]
        if(currentLo<=prevHi) {
            prevHi= Math.max(prevHi, currentHi)
            prevLo= Math.min(currentLo,prevLo)
            ans[ansIndex] = [prevLo,prevHi]
        } else {
            ans.push(intervals[i])
            prevLo = currentLo
            prevHi = currentHi
            ansIndex++
        }
    }
  return ans 
};

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(), intervals.end());

        vector<vector<int>> merged;
        for (auto interval : intervals) {
            if (merged.empty() || merged.back()[1] < interval[0]) {
                merged.push_back(interval);
            } else {
                merged.back()[1] = max(merged.back()[1], interval[1]);
            }
        }
        return merged;
    }
};
