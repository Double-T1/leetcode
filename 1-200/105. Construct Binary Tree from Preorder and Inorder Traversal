class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return helper(preorder,inorder,0,preorder.size()-1,0,inorder.size()-1);
    }
    
    TreeNode* helper(vector<int>& preorder, vector<int>& inorder, int i, int j, int p, int q) { 
        if (i>j) return nullptr;
        int val = preorder[i];
        TreeNode* root = new TreeNode(val);
        int k = p;
        while (inorder[k]!=val) k++;
        int idr = i + (k-p+1);
        root->left = helper(preorder,inorder,i+1,idr-1,p,k-1);
        root->right = helper(preorder,inorder,idr,j,k+1,q);
        return root;
    }
};
