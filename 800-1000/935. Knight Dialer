class Solution {
private:
    vector<int> ref[10] = {{4,6},{6,8},{7,9},{4,8},{0,3,9},{},{0,1,7},{2,6},{1,3},{2,4}};
public:
    int knightDialer(int n) {
        if (n == 1) return 10;
        int mod = pow(10,9) + 7;
        vector<int> accu(10,1);
        vector<int> dup(10,0);
        n--;
        while(n) {
            for (int i=0; i<10; i++) {
                dup[i] = 0;
                for (auto next: ref[i]) {
                    dup[i] += accu[next];
                    dup[i] %= mod;
                }
            }
            swap(dup,accu);
            n--;
        }
        
        int ans = 0;
        for (auto val: accu) {
            ans += val;
            ans %= mod;
        }
        return ans;
    }
};

/**
we can start from any num
for 1, there are  2 next (6,8)
for 2, there are  2 next (7,9)

0: (4,6)
1: (6,8)
2: (7,9)
3: (4,8)
4: (0,3,9)
5: ()
6: (0,1,7)
7: (2,6)
8: (1,3)
9: (2,4)


n=1 => 10
n=2 => 20
n=3 => 
if 1: n26 + n28 => 3+2






*/
