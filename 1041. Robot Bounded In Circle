//if it is a cylce => it takes at most 4 turns to revisit
visited grid
var isRobotBounded = function(instructions) {
    let visited = {}
    let source = [0,0] //rows,cols
    visited[0] = {}
    visited[0][0] = true
    let moveSpace = [[-1,0],[0,-1],[1,0],[0,1]]
    let index = 0
    for (let m=0; m<4; m++) {
        for (let k=0; k<instructions.length; k++) {
            if (instructions[k] === 'G') {
                source[0] += moveSpace[index][0]
                source[1] += moveSpace[index][1]
            } else if (instructions[k] === 'L') {
                index = (index+1)%4
            } else {
                index = index === 0? 3 : index-1
            }
        }
        let [i,j] = source
        if (i in visited && j in visited[i]) return true
        if (!visited[i]) visited[i] = {}
        visited[i][j] = true
    }
    return false
};

let instructions =  "GLLGG"
console.log(isRobotBounded(instructions))
