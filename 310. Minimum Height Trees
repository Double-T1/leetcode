var findMinHeightTrees = function(n, edges) {
    if (n ===1) return [0]
    let adj = {}
    let inDegree = []
    for (let i=0; i<edges.length; i++) {
        const[v1,v2] = edges[i]
        if(!adj[v1]) adj[v1] = []
        if(!adj[v2]) adj[v2] = []
        adj[v1].push(v2)
        adj[v2].push(v1)

        if(!inDegree[v2]) inDegree[v2] = 0
        if(!inDegree[v1]) inDegree[v1] = 0
        inDegree[v2] += 2
        inDegree[v1] += 2
    }

    let queue = []
    for (let i=0; i<n; i++) {
        if (inDegree[i] === 2) {
            queue.push(i)
        }
    }

    let mht = [];
    while (queue.length) {
        let size = queue.length
        mht = []
        while (size) {
            let vertex = queue.shift()
            mht.push(vertex)
            inDegree[vertex] = -1
            for (let end of adj[vertex]) {
                if (inDegree[end]<0) continue
                inDegree[end] -= 2
                
                if (inDegree[end] === 2) queue.push(end)
            }
            size--
        }
    }
    return mht
};
