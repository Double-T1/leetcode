var longestSubsequence = function(arr, difference) {
    let dp = new Array(arr.length)
    dp[0] = 1
    let max = 1 
    for (let i=1; i<arr.length; i++) {
        dp[i] = 1
        for (let j=i-1; j>=0; j--) {
            if (arr[i]-arr[j]===difference) {
                dp[i] = Math.max(dp[i],dp[j]+1)
            }
        }
        max = Math.max(max,dp[i])
    }
    return max
};

var longestSubsequence2 = function(arr, difference) {
    let dp = new Map()
    let max = 1
    for (let i=0; i<arr.length; i++) {
        let target = arr[i]-difference
        if (dp.has(target)) {
            let a = dp.get(target)
            dp.set(arr[i],a+1)
        } else if (!dp.has(arr[i])) {
            dp.set(arr[i],1)
        }
        max = Math.max(max,dp.get(arr[i]))
    }
    return max
};

let arr = [1,2,3,4], difference = 1
console.log(longestSubsequence2(arr,difference))
