class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        vector<int> dict(26,0);
        int count = 0;
        for (const auto& c: s1) {
            if (dict[c-'a'] == 0) count++;
            dict[c-'a']++;
        }
        int n = s1.size();
        
        for (int i=0, j=0; j<s2.size(); j++) {
            if (dict[s2[j]-'a'] == 1) count--;
            dict[s2[j]-'a']--;
            
            
            if (j-i+1 == n) {
                if (count == 0) return true;
                
                if (dict[s2[i]-'a'] == 0) count++; 
                dict[s2[i]-'a']++;
                i++;
            }
        }
        
        return false;
    }
};


var checkInclusion = function(s1, s2) {
    let map = new Map()
    let count = 0
    for (let char of s1) {
        if (!map.has(char)) {
            map.set(char,1)
            count++
        } else {
            let x = map.get(char)
            map.set(char,x+1)
        }
    }    
    
    let len = s1.length
    for (let i=0; i<s2.length; i++) {
        let char = s2[i]
        if (map.has(char)) {
            let x = map.get(char)
            map.set(char,x-1)
            if (x === 1) {
                count--
            } else if (x === 0) {
                count++
            }
        }
        
        if (count === 0) return true

        if (i-len+1>=0) {
            char = s2[i-len+1]
            if (map.has(char)) {
                let x = map.get(char)
                map.set(char,x+1)
                if (x === -1) {
                    count--
                } else if (x === 0) {
                    count++
                }
            }
        }
    }
    return false
};

let s1="abc", s2="cccccbabbbaaaa"
console.log(checkInclusion(s1,s2))
