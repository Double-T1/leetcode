var knightProbability = function(n, k, row, column) {
    let dp = new Array(n)
        .fill()
        .map(() => new Array(n).fill(1))
    let dup = new Array(n)
        .fill()
        .map(() => new Array(n))
    for (let b=1; b<=k; b++) {
        for (let i=0; i<n; i++) {
            for (let j=0; j<n; j++) {
                let ans = 0
                let actionSpace = [[i+2,j-1],[i+2,j+1],[i-2,j-1],[i-2,j+1],[i+1,j+2],[i+1,j-2],[i-1,j+2],[i-1,j-2]]
                for (let [q,r] of actionSpace) {
                    if (q>=0 && q<n && r>=0 && r<n) {
                        ans += dp[q][r]
                    }
                }
                dup[i][j] = ans/8
            }
        }
        let temp = dup
        dup = dp 
        dp = temp
    }
    return dp[row][column]
};
