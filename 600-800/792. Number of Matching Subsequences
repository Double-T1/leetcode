var numMatchingSubseq = function(s, words) {
    let map = new Map()
    for (let i=0; i<s.length; i++) {
       let char = s[i]
       if (!map.has(char)) map.set(char,[])
       map.get(char).push(i)
    }

    let count = 0
    for (let w of words) {
        if (w.length>s.length) continue
        let prev = -1
        for (let i=0; i<w.length; i++) {
            if (!map.has(w[i])) {
                count--
                break
            }
            let next = binarySearch(map.get(w[i]),prev)
            if (next === undefined) {
                count--
                break
            }
            prev = next
        }
        count++
    }
    return count
};

let binarySearch = (arr,target,left=0,right=arr.length) => {
    while(left<right) {
        let mid = left + Math.floor((right-left)/2)
        if (arr[mid]>target)right = mid
        else left = mid+1
    }
    return arr[right]
}
