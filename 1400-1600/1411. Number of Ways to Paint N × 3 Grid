//solution 1 memoization
//time: O(3*n*27*3) => O(n)
class Solution {
private: 
    const int mod = pow(10,9)+7;
    int col[3] = {0,1,2};
    
public:
    int numOfWays(int n) {
        vector<vector<int>> dp(n*3,vector<int>(27,-1));
        return helper(n,0,0,0,dp);
    }
    
private:
    int helper(int n, int i, int j, int state, vector<vector<int>>& dp) {
        if (j == 3) i++, j=0;
        if (i == n) return 1;
        if (dp[i*3+j][state]>-1) return dp[i*3+j][state];
        
        int left = j>0? state%3: -1;
        int up = i>0 ? (state/9)%3 : -1;
        
        int ans = 0;
        for (auto c: col) {
            if (c == left || c == up) continue;
            ans += helper(n,i,j+1,update(state,c),dp);
            ans %= mod;
        }
        
        return dp[i*3+j][state] = ans;
    }
    
    int update(int state, int c) {
        return (state*3)%27 + c;
    }
};
