var minScoreTriangulation = function(values) {
    return helper(values)
};

let helper = (values,i=0,j=values.length-1,memo={}) => {
    if (i in memo && j in memo[i]) return memo[i][j]
    if (!memo[i]) memo[i] = {}
    if (j-i<=1) {
        memo[i][j] = 0
    } else {
        let min = Number.MAX_SAFE_INTEGER
        for (let k=i+1; k<j; k++) {
            min = Math.min(min,values[k]*values[i]*values[j]+helper(values,i,k,memo)+helper(values,k,j,memo))
        }
        memo[i][j] = min
    }
    return memo[i][j]
}

//bottom-up
var minScoreTriangulation2 = function(values) {
    let dp = new Array(values.length)
        .fill()
        .map(() => new Array(values.length))

    for (let i=values.length-1; i>=0; i--) {
        for (let j=i; j<values.length; j++) {
            if (j-i<=1) {
                dp[i][j] = 0
            } else {
                dp[i][j] = Number.MAX_SAFE_INTEGER
                for (let k=i+1; k<j; k++) {
                    dp[i][j] = Math.min(dp[i][j],values[k]*values[i]*values[j]+dp[i][k]+dp[k][j])
                }
            }
        }
    }

    return dp[0][values.length-1]
};
let values = [1,3,1,4,1,5]
console.log(minScoreTriangulation2(values))
