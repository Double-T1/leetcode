var smallestSubsequence = function(s) {
    let lastOf = new Array(26).fill(-1)
    for (let i=0; i<s.length; i++) {
        let num = toNum(s[i])
        lastOf[num] = i
    }
    
    let stack = [], inStack = new Array(26).fill(false)
    for (let i=0; i<s.length; i++) {
        let num = toNum(s[i])
        if (inStack[num]) continue
        while (getEnd(stack)>=num && lastOf[getEnd(stack)]>i) {
            inStack[stack.pop()] = false
        }
        stack.push(num)
        inStack[num] = true
    }
    
    let ans = '';
    for (let num of stack) {
        ans += toChar(num)
    }
    
    return ans
};
    
let getEnd = arr => {
    return arr[arr.length-1]
}
 
let toNum = c => {
    return c.charCodeAt(0) -'a'.charCodeAt(0)
} 

let toChar = num => {
    return String.fromCharCode('a'.charCodeAt(0) + num)
}
